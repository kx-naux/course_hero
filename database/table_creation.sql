CREATE TABLE ACCOUNTS (
    account_id VARCHAR(9) PRIMARY KEY,
    username VARCHAR(25) NOT NULL UNIQUE,
    email VARCHAR(50) NOT NULL UNIQUE,
    saltedpassword CHAR(64) NOT NULL,
    salt VARCHAR(64) NOT NULL
);

CREATE TABLE BILLING_ADDRESS (
    ADDRESS_ID VARCHAR(9) PRIMARY KEY,
    LINE_1 VARCHAR(50),
    LINE_2 VARCHAR(50),
    CITY VARCHAR(20),
    STATE_RESIDES VARCHAR(20),
    POSTALCODE VARCHAR(9),
    COUNTRY VARCHAR(40)
);

CREATE TABLE USERS (
    USER_ID VARCHAR(9) PRIMARY KEY,
    ACCOUNT_ID VARCHAR(9) NOT NULL UNIQUE,
    DISPLAY_NAME VARCHAR(30) NOT NULL,
    DOB DATE NOT NULL,
    ADDRESS_ID VARCHAR(9) NOT NULL UNIQUE,
    USERTYPE VARCHAR(10) NOT NULL,
    VALIDITY DATE,
    DATE_JOINED TIMESTAMP NOT NULL,
    GENDER VARCHAR(20) NOT NULL,
    IMG_DATA BLOB,
    FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID),
    FOREIGN KEY(ADDRESS_ID) REFERENCES BILLING_ADDRESS(ADDRESS_ID)
);

CREATE TABLE BANKCARDINFO(
    CARDINFOID VARCHAR(9) PRIMARY KEY,
    USER_ID VARCHAR(9) NOT NULL UNIQUE,
    CARDTYPE VARCHAR(9) NOT NULL,
    CARD_HOLDER_NAME VARCHAR(45) NOT NULL,
    CARD_NO CHAR(16) NOT NULL UNIQUE,
    EXPIRY_DATE CHAR(5) NOT NULL,
    CVV VARCHAR(4) NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE TNG_ACCOUNTS(
    TNG_ID VARCHAR(9) PRIMARY KEY,
    USER_ID VARCHAR(9) NOT NULL UNIQUE,
    PHONENO VARCHAR(15) NOT NULL UNIQUE,
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE PRODUCT_CATEGORY(
    PRODCAT_ID VARCHAR(9) PRIMARY KEY,
    CATEGORY_NAME VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(100),
    IMG_URL VARCHAR(100)
);

CREATE TABLE COURSE_CATEGORY(
    COURSECAT_ID VARCHAR(9) PRIMARY KEY,
    CATEGORY_NAME VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(100),
    IMG_URL VARCHAR(100)
);

CREATE TABLE MERCH_CATEGORY(
    MERCHCAT_ID VARCHAR(9) PRIMARY KEY,
    CATEGORY_NAME VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(100),
    IMG_URL VARCHAR(100)
);

CREATE TABLE PRODUCT(
    PRODUCT_ID VARCHAR(9) PRIMARY KEY,
    PRODCAT_ID VARCHAR(9) NOT NULL,
    PROD_NAME VARCHAR(50) NOT NULL UNIQUE, 
    DESCRIPTION VARCHAR(1000) NOT NULL,
    PRICE DOUBLE NOT NULL,
    RATE_WEIGHTAGE INT NOT NULL,
    AVG_RATING DOUBLE NOT NULL,
    DISCOUNT DOUBLE NOT NULL,
    IMAGE_PATH VARCHAR(100),
    STATUS VARCHAR(30),
    FOREIGN KEY (PRODCAT_ID) REFERENCES PRODUCT_CATEGORY(PRODCAT_ID)
);

CREATE TABLE MERCHANDISE(
    MERCH_ID VARCHAR(9) PRIMARY KEY,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    MERCHCAT_ID VARCHAR(9) NOT NULL,
    DIMENSION_H_CM DOUBLE NOT NULL,
    DIMENSION_W_CM DOUBLE NOT NULL,
    DIMENSION_L_CM DOUBLE NOT NULL,
    WEIGHT_KG DOUBLE NOT NULL,
    STOCK_BALANCE INT NOT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (MERCHCAT_ID) REFERENCES MERCH_CATEGORY(MERCHCAT_ID)
);

CREATE TABLE COURSES(
    COURSE_ID VARCHAR(9) PRIMARY KEY,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    TOOLS_USED VARCHAR(100) NOT NULL,
    COURSECAT_ID VARCHAR(9) NOT NULL,
    LEARNING_OBJ VARCHAR(255) NOT NULL,
    LENGTH_HOUR DOUBLE NOT NULL,
    COURSE_LEVEL VARCHAR(50) NOT NULL,
    DATE_ADDED DATE NOT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (COURSECAT_ID) REFERENCES COURSE_CATEGORY(COURSECAT_ID)
);

CREATE TABLE AUTHORS(
    AUTHOR_ID VARCHAR(9) PRIMARY KEY, 
    IMG_URL VARCHAR(100),
    AUTHOR_NAME VARCHAR(30) NOT NULL UNIQUE,
    NATIONALITY VARCHAR(30) NOT NULL,
    INSTITUTION VARCHAR(60) NOT NULL,
    AWARDS_HONORS VARCHAR(255),
    BIOGRAPHY VARCHAR(255) NOT NULL,
    DATE_JOINED DATE NOT NULL,
    AUTHOR_POSITION VARCHAR(60) NOT NULL,
    WEBSITE VARCHAR(255)
);

CREATE TABLE SOCIAL_MEDIA_LINKS(
    SOCIALMEDIALINK_ID VARCHAR(9) PRIMARY KEY,
    AUTHOR_ID VARCHAR(9) NOT NULL,
    SOCIALMEDIA_NAME VARCHAR(20) NOT NULL,
    DEST_LINK VARCHAR(255) NOT NULL,
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(AUTHOR_ID)
);

CREATE TABLE COURSE_SUBSCRIPTIONS(
    SUBSCRIPTIONS_ID VARCHAR(9) PRIMARY KEY,
    COURSE_ID VARCHAR(9) NOT NULL,
    USER_ID VARCHAR(9) NOT NULL,
    SUBSCRIBE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    PROGRESS VARCHAR(9) NOT NULL,
    FINISH_TIME TIMESTAMP NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE COURSE_CERT_TYPE(
    CERTTYPE_ID VARCHAR(9) PRIMARY KEY,
    COURSE_ID VARCHAR(9) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    ISSUING_AUTHORITY VARCHAR(60) NOT NULL,
    CERT_LEVEL VARCHAR(20) NOT NULL,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID)
);

CREATE TABLE COURSE_CERTIFICATES(
    CERTIFICATE_ID VARCHAR(9) PRIMARY KEY,
    CERTTYPE_ID VARCHAR(9) NOT NULL,
    USER_ID VARCHAR(9) NOT NULL,
    COURSE_ID VARCHAR(9) NOT NULL,
    TIME_ISSUED TIMESTAMP NOT NULL,
    CERTIFICATE_NUMBER VARCHAR(9) NOT NULL,
    FOREIGN KEY (CERTTYPE_ID) REFERENCES COURSE_CERT_TYPE(CERTTYPE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID)
);

CREATE TABLE CART_ITEMS(
    CARTITEM_ID VARCHAR(9) PRIMARY KEY,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    USER_ID VARCHAR(9) NOT NULL,
    QUANTITY INT NOT NULL,
    TIME_ADDED TIMESTAMP NOT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE RATINGS(
    RATING_ID VARCHAR(9) PRIMARY KEY,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    USER_ID VARCHAR(9) NOT NULL,
    SCORE INT NOT NULL,
    COMMENT VARCHAR(555) NOT NULL,
    TIME_RATED TIMESTAMP NOT NULL,
    TOTAL_VOTE INT NOT NULL,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE CHATROOMS(
    CHATROOM_ID VARCHAR(9) PRIMARY KEY,
    CHATROOM_TYPE VARCHAR(10) NOT NULL,
    STATUS VARCHAR(10) NOT NULL,
    REQ_TITLE VARCHAR(50) NOT NULL,
    REQ_DESCRIPTION VARCHAR(500) NOT NULL
);

CREATE TABLE USER_CHATROOMS(
    USER_ID VARCHAR(9) NOT NULL,
    CHATROOM_ID VARCHAR(9) NOT NULL,
    CHAT_ROLE VARCHAR(10) NOT NULL,
    PRIMARY KEY (USER_ID, CHATROOM_ID, CHAT_ROLE),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (CHATROOM_ID) REFERENCES CHATROOMS(CHATROOM_ID)
);

CREATE TABLE PROMOTIONS(
    PROMOTION_ID VARCHAR(9) PRIMARY KEY,
    PROMOTION_NAME VARCHAR(100) NOT NULL,
    PROMO_DESCRIPTION VARCHAR(1000) NOT NULL,
    PROMO_CODE VARCHAR(10) UNIQUE NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP NOT NULL,
    PROMO_TYPE VARCHAR(20) NOT NULL,
    AMOUNT DOUBLE NOT NULL,
    MIN_REQ DOUBLE NOT NULL,
    LEGAL_TNC VARCHAR(30) NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    GEOGRAPHIC_RESTIRICTION VARCHAR(300)
);

CREATE TABLE SHIPPING_METHOD(
    SHIPPING_METHOD_ID VARCHAR(9) PRIMARY KEY, 
    SHIPPING_TYPE VARCHAR(21) NOT NULL,
    DELIVERY_SPEED VARCHAR(21) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    COVERAGE_AREA VARCHAR(255) NOT NULL,
    SHIPPING_RATES DOUBLE NOT NULL,
    RETURN_POLICY VARCHAR(1000) NOT NULL
);

CREATE TABLE SHIPPING(
    SHIPPING_ID VARCHAR(9) PRIMARY KEY,
    ADDRESS_ID VARCHAR(9) NOT NULL,
    SHIPPING_DATE DATE NOT NULL,
    EXPECTED_DELIVERY_DATE DATE NOT NULL,
    SHIPPING_COST DOUBLE NOT NULL,
    TTL_WEIGHT_KG DOUBLE NOT NULL,
    DIMENSTION_CM_HxWxL VARCHAR(20) NOT NULL,
    SHIPPING_NOTES VARCHAR(200) NOT NULL,
    FOREIGN KEY (ADDRESS_ID) REFERENCES BILLING_ADDRESS(ADDRESS_ID)
);

CREATE TABLE TRANSACTIONS(
    TRANSACTION_ID VARCHAR(9) PRIMARY KEY,
    USER_ID VARCHAR(9) NOT NULL,
    SUBTOTAL DOUBLE NOT NULL,
    PROMOTION_ID VARCHAR(9),
    PROMO_AMOUNT DOUBLE NOT NULL,
    TAX DOUBLE NOT NULL,
    TRANSACTION_TYPE VARCHAR(30) NOT NULL,
    TRANSACTION_FEE DOUBLE NOT NULL,   
    TOTAL DOUBLE NOT NULL,
    STATUS VARCHAR(30) NOT NULL, 
    SHIPPING_ID VARCHAR(9) NOT NULL,
    TIME_ADDED TIMESTAMP NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY(PROMOTION_ID) REFERENCES PROMOTIONS(PROMOTION_ID),
    FOREIGN KEY(SHIPPING_ID) REFERENCES SHIPPING(SHIPPING_ID)
);

CREATE TABLE ORDERS(
    TRANSACTION_ID VARCHAR(9) NOT NULL,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    QUANTITY INT NOT NULL,
    PRIMARY KEY (TRANSACTION_ID, PRODUCT_ID),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS(TRANSACTION_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

CREATE TABLE REFUNDS(
    REFUND_ID VARCHAR(9) PRIMARY KEY,
    TRANSACTION_ID VARCHAR(9) NOT NULL,
    REFUND_TYPE VARCHAR(30) NOT NULL,
    REASON VARCHAR(255) NOT NULL,
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS(TRANSACTION_ID)
);

CREATE TABLE AUTHOR_CONTRIBUTION(
    CONTRIBUTION_ID VARCHAR(9) PRIMARY KEY,
    AUTHOR_ID VARCHAR(9) NOT NULL,
    COURSE_ID VARCHAR(9) NOT NULL,  
    CONTRIBUTION DOUBLE NOT NULL,   
    DESCRIPTION VARCHAR(355) NOT NULL,
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(AUTHOR_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID)
);

CREATE TABLE MESSAGES(
    MESSAGE_ID VARCHAR(9) PRIMARY KEY,
    USER_ID VARCHAR(9) NOT NULL,
    CHATROOM_ID VARCHAR(9) NOT NULL,    
    MESSAGE_TYPE VARCHAR(20) NOT NULL,
    CONTENT VARCHAR(255) NOT NULL,
    DESTINATION VARCHAR(255) NOT NULL,
    TIME_CREATED TIMESTAMP NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (CHATROOM_ID) REFERENCES CHATROOMS(CHATROOM_ID)
);

CREATE TABLE PAYMENT_METHOD(
    PAYMENT_METHOD_ID VARCHAR(9) PRIMARY KEY,
    PAYMENT_NAME VARCHAR(20) NOT NULL,
    ACCEPTED_CURRENCIES VARCHAR(255) NOT NULL
);

CREATE TABLE PAYMENTS(
    PAYMENT_ID VARCHAR(9) PRIMARY KEY,
    PAYMENT_METHOD_ID VARCHAR(9) NOT NULL,
    TRANSACTION_ID VARCHAR(9) NOT NULL UNIQUE,
    ACCOUNT_NUMBER VARCHAR(15) NOT NULL,
    PAYMENT_GATEWAY VARCHAR(255) NOT NULL,
    AMOUNT DOUBLE NOT NULL,
    STATUS VARCHAR(15) NOT NULL,
    DATE_ISSUED TIMESTAMP NOT NULL,
    FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD(PAYMENT_METHOD_ID),
    FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTIONS(TRANSACTION_ID)
);

CREATE TABLE PREFERRED_COURSE(
    USER_ID VARCHAR(9),
    COURSECAT_ID VARCHAR(9),
    TIME_ADDED TIMESTAMP,
    PRIMARY KEY(USER_ID, COURSECAT_ID),
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY(COURSECAT_ID) REFERENCES COURSE_CATEGORY(COURSECAT_ID)
);

CREATE TABLE REMEMBER_ME_TOKEN(
    TOKEN VARCHAR(50) PRIMARY KEY,
    USER_ID VARCHAR(9),
    DATE_ISSUED TIMESTAMP NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE TABLES_RECORD_COUNTER(
    TB_NBAME VARCHAR(100) PRIMARY KEY,
    COUNTER BIGINT NOT NULL
);

CREATE TABLE WISHLIST(
    WISHLIST_ID VARCHAR(9) PRIMARY KEY,
    USER_ID VARCHAR(9) NOT NULL,
    PRODUCT_ID VARCHAR(9) NOT NULL,
    DATE_ADDED TIMESTAMP NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);